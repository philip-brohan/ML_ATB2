A deep convolutional transcriber
================================

As a first attempt at a model which might do the transcription, I'm using a straightforward deep convolutional approach: Four 2x2 strided convolutional layers to reduce the dimension of the image, a single fully connected layer to extract the transcribed numbers from the convolutional features, and a softmax layer to express the predicted transcriptions as probabilities for each digit. With ELU activations, and dropout in each layer to resist overfitting.

.. figure:: DCT.png
   :width: 95%
   :align: center
   :figwidth: 95%

   Schematic of the deep-convolutional transcriber model

.. toctree::
   :maxdepth: 1

   Functions to provide training/test Dataset (common across models) <../../data/files_to_dataset>
   Model specification <transcriberModel>
   Model fit script <training>

While far from perfect, this has considerable skill:

.. figure:: compare.png
   :width: 95%
   :align: center
   :figwidth: 95%

   On the left, a test image from the benchmark (not part of the training dataset). On the right, the most-likely digit in each location from the deep-convolutional transcriber after 100 epochs training. Digits in blue are correct, in red mistakes.

.. toctree::
   :maxdepth: 1

   Model validation script <validation>




